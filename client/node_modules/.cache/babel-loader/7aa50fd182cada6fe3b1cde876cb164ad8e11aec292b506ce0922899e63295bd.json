{"ast":null,"code":"var _jsxFileName = \"F:\\\\MY PLAYGROUND\\\\WEB DEVELOPMENT\\\\PROJECTS\\\\AI-Powered-Personal-Finance-Management-System\\\\client\\\\src\\\\components\\\\visualizations\\\\IncomeVsExpenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, LineElement, PointElement } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\nconst IncomeVsExpenses = () => {\n  _s();\n  const [income, setIncome] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [timeframe, setTimeframe] = useState('monthly'); // monthly, yearly\n  const [year, setYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const headers = {\n          'x-auth-token': token\n        };\n        const [incomeRes, expensesRes] = await Promise.all([axios.get('http://localhost:5000/api/income', {\n          headers\n        }), axios.get('http://localhost:5000/api/expenses', {\n          headers\n        })]);\n        setIncome(incomeRes.data);\n        setExpenses(expensesRes.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const processMonthlyData = () => {\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const monthlyIncome = new Array(12).fill(0);\n    const monthlyExpenses = new Array(12).fill(0);\n    const monthlySavings = new Array(12).fill(0);\n    income.forEach(inc => {\n      const date = new Date(inc.date);\n      if (date.getFullYear() === year) {\n        monthlyIncome[date.getMonth()] += inc.amount;\n      }\n    });\n    expenses.forEach(exp => {\n      const date = new Date(exp.date);\n      if (date.getFullYear() === year) {\n        monthlyExpenses[date.getMonth()] += exp.amount;\n      }\n    });\n    monthlyIncome.forEach((inc, index) => {\n      monthlySavings[index] = inc - monthlyExpenses[index];\n    });\n    return {\n      labels: months,\n      datasets: [{\n        label: 'Income',\n        data: monthlyIncome,\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        borderColor: 'rgb(75, 192, 192)',\n        type: 'bar'\n      }, {\n        label: 'Expenses',\n        data: monthlyExpenses,\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n        borderColor: 'rgb(255, 99, 132)',\n        type: 'bar'\n      }, {\n        label: 'Savings',\n        data: monthlySavings,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        type: 'line',\n        yAxisID: 'savings'\n      }]\n    };\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: false\n      },\n      y: {\n        stacked: false,\n        title: {\n          display: true,\n          text: 'Amount ($)'\n        }\n      },\n      savings: {\n        position: 'right',\n        grid: {\n          drawOnChartArea: false\n        },\n        title: {\n          display: true,\n          text: 'Savings ($)'\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: `Income vs Expenses (${year})`\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = processMonthlyData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: \"Income vs Expenses Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: year,\n          onChange: e => setYear(parseInt(e.target.value)),\n          className: \"rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\",\n          children: [...Array(5)].map((_, i) => {\n            const yearOption = new Date().getFullYear() - i;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: yearOption,\n              children: yearOption\n            }, yearOption, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 grid grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-green-100 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-sm font-medium text-green-800\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-green-600\",\n          children: [\"$\", income.reduce((total, inc) => total + inc.amount, 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-red-100 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-sm font-medium text-red-800\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: [\"$\", expenses.reduce((total, exp) => total + exp.amount, 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-blue-100 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-sm font-medium text-blue-800\",\n          children: \"Net Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: [\"$\", (income.reduce((total, inc) => total + inc.amount, 0) - expenses.reduce((total, exp) => total + exp.amount, 0)).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(IncomeVsExpenses, \"yhsqAIowoV0zOJVf+PEt0tex43Y=\");\n_c = IncomeVsExpenses;\nexport default IncomeVsExpenses;\nvar _c;\n$RefreshReg$(_c, \"IncomeVsExpenses\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","LineElement","PointElement","Bar","Line","jsxDEV","_jsxDEV","register","IncomeVsExpenses","_s","income","setIncome","expenses","setExpenses","loading","setLoading","timeframe","setTimeframe","year","setYear","Date","getFullYear","fetchData","token","localStorage","getItem","headers","incomeRes","expensesRes","Promise","all","get","data","err","console","error","processMonthlyData","months","monthlyIncome","Array","fill","monthlyExpenses","monthlySavings","forEach","inc","date","getMonth","amount","exp","index","labels","datasets","label","backgroundColor","borderColor","type","yAxisID","options","responsive","scales","x","stacked","y","title","display","text","savings","position","grid","drawOnChartArea","plugins","tooltip","mode","intersect","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","className","value","onChange","e","parseInt","target","map","_","i","yearOption","reduce","total","toFixed","_c","$RefreshReg$"],"sources":["F:/MY PLAYGROUND/WEB DEVELOPMENT/PROJECTS/AI-Powered-Personal-Finance-Management-System/client/src/components/visualizations/IncomeVsExpenses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  PointElement\r\n} from 'chart.js';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst IncomeVsExpenses = () => {\r\n  const [income, setIncome] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeframe, setTimeframe] = useState('monthly'); // monthly, yearly\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const headers = { 'x-auth-token': token };\r\n\r\n        const [incomeRes, expensesRes] = await Promise.all([\r\n          axios.get('http://localhost:5000/api/income', { headers }),\r\n          axios.get('http://localhost:5000/api/expenses', { headers })\r\n        ]);\r\n\r\n        setIncome(incomeRes.data);\r\n        setExpenses(expensesRes.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching data:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const processMonthlyData = () => {\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    \r\n    const monthlyIncome = new Array(12).fill(0);\r\n    const monthlyExpenses = new Array(12).fill(0);\r\n    const monthlySavings = new Array(12).fill(0);\r\n\r\n    income.forEach(inc => {\r\n      const date = new Date(inc.date);\r\n      if (date.getFullYear() === year) {\r\n        monthlyIncome[date.getMonth()] += inc.amount;\r\n      }\r\n    });\r\n\r\n    expenses.forEach(exp => {\r\n      const date = new Date(exp.date);\r\n      if (date.getFullYear() === year) {\r\n        monthlyExpenses[date.getMonth()] += exp.amount;\r\n      }\r\n    });\r\n\r\n    monthlyIncome.forEach((inc, index) => {\r\n      monthlySavings[index] = inc - monthlyExpenses[index];\r\n    });\r\n\r\n    return {\r\n      labels: months,\r\n      datasets: [\r\n        {\r\n          label: 'Income',\r\n          data: monthlyIncome,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          type: 'bar'\r\n        },\r\n        {\r\n          label: 'Expenses',\r\n          data: monthlyExpenses,\r\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n          borderColor: 'rgb(255, 99, 132)',\r\n          type: 'bar'\r\n        },\r\n        {\r\n          label: 'Savings',\r\n          data: monthlySavings,\r\n          borderColor: 'rgb(53, 162, 235)',\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n          type: 'line',\r\n          yAxisID: 'savings'\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        stacked: false,\r\n      },\r\n      y: {\r\n        stacked: false,\r\n        title: {\r\n          display: true,\r\n          text: 'Amount ($)'\r\n        }\r\n      },\r\n      savings: {\r\n        position: 'right',\r\n        grid: {\r\n          drawOnChartArea: false,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Savings ($)'\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: `Income vs Expenses (${year})`\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const chartData = processMonthlyData();\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n      <div className=\"mb-4 flex justify-between items-center\">\r\n        <h3 className=\"text-xl font-semibold\">Income vs Expenses Analysis</h3>\r\n        <div className=\"flex gap-4\">\r\n          <select\r\n            value={year}\r\n            onChange={(e) => setYear(parseInt(e.target.value))}\r\n            className=\"rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n          >\r\n            {[...Array(5)].map((_, i) => {\r\n              const yearOption = new Date().getFullYear() - i;\r\n              return (\r\n                <option key={yearOption} value={yearOption}>\r\n                  {yearOption}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4\">\r\n        <Bar data={chartData} options={options} />\r\n      </div>\r\n\r\n      <div className=\"mt-8 grid grid-cols-3 gap-4\">\r\n        <div className=\"p-4 bg-green-100 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-green-800\">Total Income</h4>\r\n          <p className=\"text-2xl font-bold text-green-600\">\r\n            ${income.reduce((total, inc) => total + inc.amount, 0).toFixed(2)}\r\n          </p>\r\n        </div>\r\n        <div className=\"p-4 bg-red-100 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-red-800\">Total Expenses</h4>\r\n          <p className=\"text-2xl font-bold text-red-600\">\r\n            ${expenses.reduce((total, exp) => total + exp.amount, 0).toFixed(2)}\r\n          </p>\r\n        </div>\r\n        <div className=\"p-4 bg-blue-100 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-blue-800\">Net Savings</h4>\r\n          <p className=\"text-2xl font-bold text-blue-600\">\r\n            ${(\r\n              income.reduce((total, inc) => total + inc.amount, 0) -\r\n              expenses.reduce((total, exp) => total + exp.amount, 0)\r\n            ).toFixed(2)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeVsExpenses; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,WAAW,EACXC,YAAY,QACP,UAAU;AACjB,SAASC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5CZ,OAAO,CAACa,QAAQ,CACdZ,aAAa,EACbC,WAAW,EACXC,UAAU,EACVI,WAAW,EACXC,YAAY,EACZJ,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,IAAI8B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAE1D9B,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAO,GAAG;UAAE,cAAc,EAAEH;QAAM,CAAC;QAEzC,MAAM,CAACI,SAAS,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACjDtC,KAAK,CAACuC,GAAG,CAAC,kCAAkC,EAAE;UAAEL;QAAQ,CAAC,CAAC,EAC1DlC,KAAK,CAACuC,GAAG,CAAC,oCAAoC,EAAE;UAAEL;QAAQ,CAAC,CAAC,CAC7D,CAAC;QAEFf,SAAS,CAACgB,SAAS,CAACK,IAAI,CAAC;QACzBnB,WAAW,CAACe,WAAW,CAACI,IAAI,CAAC;QAC7BjB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;QAC1ClB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAEnG,MAAMC,aAAa,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC3C,MAAMC,eAAe,GAAG,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7C,MAAME,cAAc,GAAG,IAAIH,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAE5C9B,MAAM,CAACiC,OAAO,CAACC,GAAG,IAAI;MACpB,MAAMC,IAAI,GAAG,IAAIzB,IAAI,CAACwB,GAAG,CAACC,IAAI,CAAC;MAC/B,IAAIA,IAAI,CAACxB,WAAW,CAAC,CAAC,KAAKH,IAAI,EAAE;QAC/BoB,aAAa,CAACO,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,IAAIF,GAAG,CAACG,MAAM;MAC9C;IACF,CAAC,CAAC;IAEFnC,QAAQ,CAAC+B,OAAO,CAACK,GAAG,IAAI;MACtB,MAAMH,IAAI,GAAG,IAAIzB,IAAI,CAAC4B,GAAG,CAACH,IAAI,CAAC;MAC/B,IAAIA,IAAI,CAACxB,WAAW,CAAC,CAAC,KAAKH,IAAI,EAAE;QAC/BuB,eAAe,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,IAAIE,GAAG,CAACD,MAAM;MAChD;IACF,CAAC,CAAC;IAEFT,aAAa,CAACK,OAAO,CAAC,CAACC,GAAG,EAAEK,KAAK,KAAK;MACpCP,cAAc,CAACO,KAAK,CAAC,GAAGL,GAAG,GAAGH,eAAe,CAACQ,KAAK,CAAC;IACtD,CAAC,CAAC;IAEF,OAAO;MACLC,MAAM,EAAEb,MAAM;MACdc,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,QAAQ;QACfpB,IAAI,EAAEM,aAAa;QACnBe,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE;MACR,CAAC,EACD;QACEH,KAAK,EAAE,UAAU;QACjBpB,IAAI,EAAES,eAAe;QACrBY,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE;MACR,CAAC,EACD;QACEH,KAAK,EAAE,SAAS;QAChBpB,IAAI,EAAEU,cAAc;QACpBY,WAAW,EAAE,mBAAmB;QAChCD,eAAe,EAAE,yBAAyB;QAC1CE,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EACH,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,OAAO,EAAE;MACX,CAAC;MACDC,CAAC,EAAE;QACDD,OAAO,EAAE,KAAK;QACdE,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,OAAO,EAAE;QACPC,QAAQ,EAAE,OAAO;QACjBC,IAAI,EAAE;UACJC,eAAe,EAAE;QACnB,CAAC;QACDN,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDK,OAAO,EAAE;MACPP,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,uBAAuB/C,IAAI;MACnC,CAAC;MACDqD,OAAO,EAAE;QACPC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE;MACb;IACF;EACF,CAAC;EAED,IAAI3D,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAoE,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,SAAS,GAAG3C,kBAAkB,CAAC,CAAC;EAEtC,oBACE9B,OAAA;IAAK0E,SAAS,EAAC,mCAAmC;IAAAN,QAAA,gBAChDpE,OAAA;MAAK0E,SAAS,EAAC,wCAAwC;MAAAN,QAAA,gBACrDpE,OAAA;QAAI0E,SAAS,EAAC,uBAAuB;QAAAN,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtExE,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAN,QAAA,eACzBpE,OAAA;UACE2E,KAAK,EAAE/D,IAAK;UACZgE,QAAQ,EAAGC,CAAC,IAAKhE,OAAO,CAACiE,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;UACnDD,SAAS,EAAC,oFAAoF;UAAAN,QAAA,EAE7F,CAAC,GAAGnC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC+C,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YAC3B,MAAMC,UAAU,GAAG,IAAIrE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGmE,CAAC;YAC/C,oBACElF,OAAA;cAAyB2E,KAAK,EAAEQ,UAAW;cAAAf,QAAA,EACxCe;YAAU,GADAA,UAAU;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEf,CAAC;UAEb,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxE,OAAA;MAAK0E,SAAS,EAAC,MAAM;MAAAN,QAAA,eACnBpE,OAAA,CAACH,GAAG;QAAC6B,IAAI,EAAE+C,SAAU;QAACtB,OAAO,EAAEA;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAENxE,OAAA;MAAK0E,SAAS,EAAC,6BAA6B;MAAAN,QAAA,gBAC1CpE,OAAA;QAAK0E,SAAS,EAAC,6BAA6B;QAAAN,QAAA,gBAC1CpE,OAAA;UAAI0E,SAAS,EAAC,oCAAoC;UAAAN,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpExE,OAAA;UAAG0E,SAAS,EAAC,mCAAmC;UAAAN,QAAA,GAAC,GAC9C,EAAChE,MAAM,CAACgF,MAAM,CAAC,CAACC,KAAK,EAAE/C,GAAG,KAAK+C,KAAK,GAAG/C,GAAG,CAACG,MAAM,EAAE,CAAC,CAAC,CAAC6C,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNxE,OAAA;QAAK0E,SAAS,EAAC,2BAA2B;QAAAN,QAAA,gBACxCpE,OAAA;UAAI0E,SAAS,EAAC,kCAAkC;UAAAN,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpExE,OAAA;UAAG0E,SAAS,EAAC,iCAAiC;UAAAN,QAAA,GAAC,GAC5C,EAAC9D,QAAQ,CAAC8E,MAAM,CAAC,CAACC,KAAK,EAAE3C,GAAG,KAAK2C,KAAK,GAAG3C,GAAG,CAACD,MAAM,EAAE,CAAC,CAAC,CAAC6C,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNxE,OAAA;QAAK0E,SAAS,EAAC,4BAA4B;QAAAN,QAAA,gBACzCpE,OAAA;UAAI0E,SAAS,EAAC,mCAAmC;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClExE,OAAA;UAAG0E,SAAS,EAAC,kCAAkC;UAAAN,QAAA,GAAC,GAC7C,EAAC,CACAhE,MAAM,CAACgF,MAAM,CAAC,CAACC,KAAK,EAAE/C,GAAG,KAAK+C,KAAK,GAAG/C,GAAG,CAACG,MAAM,EAAE,CAAC,CAAC,GACpDnC,QAAQ,CAAC8E,MAAM,CAAC,CAACC,KAAK,EAAE3C,GAAG,KAAK2C,KAAK,GAAG3C,GAAG,CAACD,MAAM,EAAE,CAAC,CAAC,EACtD6C,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CAjLID,gBAAgB;AAAAqF,EAAA,GAAhBrF,gBAAgB;AAmLtB,eAAeA,gBAAgB;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}